<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        4wAAAOMBD+bfpwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARNSURBVFhH1VZL
        TFRZEH00mIzRIW5GTRSIm3EWLgdnQWOQbvCTOJkBIaLJGFGjM2MwfvCz0HSiiZ9GB957LZlWMZrgJCYz
        aECNuEBRBvxrohuNfzTGROPOX7qvdW7Xu9zufjSPwMaTVGhu1a06t269W2V8ZRBZRiBS6AvY630B0/YF
        reP0+4gvaO/wBc01Rpn1o7QZdZTaBRTMIuknERmlzHpOf00j2JTPu0eAkr8m+MrMfeTwQ1IQb/KeJLws
        cjWPvQ0T5dYP5OC+5hDylMTMCVpzjNmN043y8Dgp9BtrpEOWnrGtlKmLj35a2XzlV/bqDTmBptm0+Z1y
        RGnNDpq1RtWJbDYZHGSTHbCW0z51Xbk/R+PVDZc2sMUQSJxcBc8KWm1GSWQ8a72jaM+3tPeUTmJ19Fol
        awcB7lxPe8BqNEIhH2uHD9pbvbc74Yskj65jidk3lbXpIKP9jrE8+UiCM7pfxEVxfYciUbr17E1WpSDx
        qSWqne5cT3uBJablWeIQ/R0ihYaRb4qFbDsN/19+KUTnw49i4sIWSeCbeQfEKvvqLGmsg5SoYGkkC04D
        HOZbQpDECmyxgpfTAB1s2DaKNRCAbPnnnspCcf3pO3LDAEQWKZyqfZpa7Ti55tiVRErwWIEpKrDuEOju
        j4vJ1UckgUlVLbG/r4sxcqNEqTmTg1P67SZeTQI5rNUCxCkrf7AqXWeL31mlCEAqd19QWVhq9SxjE0o/
        3nZW5AQic3k5DW4kMgUHdAINZ58oAnO2df7LJvL+I47CCNjf87IrUlOt/3a7Gp3A8RtvFYGiDe232UQS
        aFUEPDw6Kad2PbkDncD5R58UgcK1bQ/ZRBJoGTEBrSYc9L0RuTqBc/Q5KgJ1Jx+xmSSwUxEYxSvoeSVm
        6AT0K/BvbB/4FKny/3QUwypCSrtbYbI50r9OJ6AX4dztnf+xGYEmGUdBYvFqEjJVuxuJE0JkU9B7OoGK
        XV2KQE3DpRreDtBDlJhkoHw2Gg9R3TlxWA9+8XlMPUQTq1o+h0Iiuc+QwmQCAv2clyXofT+YKbgDncTS
        dhHTCWxuvatO76/vuMVbNNAMR0qMUTDqRz9njWxG5DRKqZbP62BA2nFyBG97MBAc1f8dN6Ox85vFosbe
        n3hLMsggzAREVpl1xssE1PVajEe197wU6ylY0p1D0I79GwfaccmWM728NR0YIDHDOcYYJuAg1alXwd6q
        PRdV8LyaYx9/a/5/CodzBwZIjE/OJgwT6OduATIJ0l5U366C5y6Ixpfs7ynnMJlRubd7nU4CwwT6OVqq
        WzBdUO0oOOfOneCV4Qt17N4blltXfsEM5ziB4DNCS91HD0orvWp42yH4jUemgnTOp+YI0u755KnAAIkZ
        DmOU7tSLoNpLNp/uHfLOvaA20ucv3tRxmx6QmFswXfDI+Ml20E9tJAh1iRxMMhgm0M/R0QrXnnyMxoK3
        fVH48mI2/VpgGF8A91fM8NgCc/YAAAAASUVORK5CYII=
</value>
  </data>
</root>